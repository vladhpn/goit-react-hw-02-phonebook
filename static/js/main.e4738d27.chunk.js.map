{"version":3,"sources":["components/Form/styles.module.scss","components/Form/Form.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","index.tsx","components/Filter/styles.module.scss","components/ContactList/styles.module.scss"],"names":["module","exports","Form","props","useState","name","setName","number","setNumber","className","styles","title","onSubmit","event","preventDefault","addContact","form","label","text","input","type","value","onChange","target","pattern","required","button","content","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","App","setContacts","filter","setFilter","getVisibleContact","contact","toLowerCase","includes","toLocaleLowerCase","newContact","shortid","generate","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4738d27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","import { useState } from \"react\";\nimport styles from '../Form/styles.module.scss';\n\n\ninterface ContactsProps{\n  addContact(name:string, number:string): void\n}\n\nconst Form: React.FC<ContactsProps> = (props) =>{\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('') \n\n      const updateName = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value)\n      }\n\n      const updateNumber = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setNumber(event.target.value)\n      }\n\n          const  handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        props.addContact(name, number)\n           setName('')\n           setNumber('')\n      };\n\n        return(<>\n        \n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={name}\n                  onChange={updateName}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={number}\n                  onChange={updateNumber}\n                  pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n\n\n\nexport default Form;","import PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\nimport { IContacts } from '../../interfaces';\n\n\ntype ContactListType = {\n    contacts: IContacts[]\n    onDeleteContact(id:string):void\n}\n\nconst ContactList: React.FC<ContactListType> = ({contacts, onDeleteContact }) =>{return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\n    ContactList.propTypes = {\n     onDeleteContact: PropTypes.func.isRequired\n    }\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\ntype FilterType = {\n  value: string\n  onChange(event:React.ChangeEvent<HTMLInputElement>):void\n}\n\nconst Filter = ({value, onChange}:FilterType) => {\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\n      Filter.propTypes = {\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired\n      }\n\nexport default Filter;","import { useState } from 'react';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport shortid from 'shortid';\nimport {IContacts} from './interfaces'\n\n// state = {\n//   contacts: [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   filter: '',\n// };\n\n\n\n// type ContactsType = {\n//   id: string,\n//   name: string,\n//   number: string,\n  \n// }\n\n// interface IContacts {\n//   id: string;\n//   name: string,\n//   number: string\n// }\n\n\n\nconst App:React.FC = () => {\n  const [contacts, setContacts] = useState<IContacts[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  const addContact = (name:string, number:string) => {\n    const newContact:IContacts = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    setContacts(prev => [newContact, ...contacts]);\n  };\n\n  const deleteContact = (id:string) => {\n    setContacts(prev => prev.filter(contact => contact.id !== id));\n  };\n\n  const changeFilter = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setFilter(event.target.value);\n    // console.log(filter);\n  };\n\n  const getVisibleContact = contacts.filter(contact => {\n    if (filter === '') {\n      return contacts;\n    }\n    return contact.name.toLowerCase().includes(filter.toLocaleLowerCase());\n  });\n\n  return (\n    <>\n      <Form addContact={addContact} />\n\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContact}\n        onDeleteContact={deleteContact}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};"],"sourceRoot":""}