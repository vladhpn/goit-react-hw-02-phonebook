{"version":3,"sources":["components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Form","nameInputId","shortid","generate","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","Component","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","filter","addContact","contact","deleteContact","prevState","changeFilter","getVisibleContact","normilizeFilter","toLocaleLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAkEeA,E,4MA3DZC,YAAcC,IAAQC,W,EAErBC,MAAO,CACHC,KAAM,GACNC,OAAQ,I,EAEZC,kBAAoB,SAACC,GAAW,IAAD,EACHA,EAAMC,cAAtBJ,EADmB,EACnBA,KAAMK,EADa,EACbA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGPA,MAAQ,WACJ,EAAKL,SAAS,CAAC,KAAS,GAAI,OAAW,M,4CAG7C,WACI,OAAO,qCACH,4CACA,uBAAMI,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACEM,KAAK,OACLb,KAAK,OACLK,MAAOO,KAAKb,MAAMC,KAClBc,SAAUF,KAAKV,kBACfa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,0CAEE,uBACEJ,KAAK,MACLb,KAAK,SACLK,MAAOO,KAAKb,MAAME,OAClBa,SAAUF,KAAKV,kBACfa,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,oC,GAtDKK,aCMJC,EARK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,gBAAsB,OAAQ,mCAC1D,6BAAKD,EAASE,KAAI,gBAAEC,EAAF,EAAEA,GAAIvB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAZ,OAAwB,+BACtC,8BAAID,EAAJ,OACA,4BAAIC,IACJ,wBAAQuB,QAAS,kBAAKH,EAAgBE,IAAtC,sBAH+CA,WCMxCE,EAVA,SAAC,GAAuB,IAAtBpB,EAAqB,EAArBA,MAAOS,EAAc,EAAdA,SACpB,OAAO,qCACP,0CACC,0DAGK,uBAAOD,KAAK,OAAOR,MAAOA,EAAOS,SAAUA,OAL1C,QCoEIY,G,kNA7Db3B,MAAQ,CACNqB,SAAU,CACR,CAAEG,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhD0B,OAAQ,I,EAGVC,WAAa,YAAuB,IAApB5B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACd4B,EAAU,CACdN,GAAI1B,IAAQC,WACZE,OACAC,UAGF,EAAKK,UAAS,gBAAGc,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAES,GAAH,mBAAeT,S,EAI3BU,cAAgB,SAAAP,GACd,EAAKjB,UAAS,SAAAyB,GAAS,MAAK,CAC1BX,SAAUW,EAAUX,SAASO,QAAO,SAAAE,GAAO,OAAIA,EAAQN,KAAOA,U,EAIlES,aAAe,SAAA7B,GACb,EAAKG,SAAS,CAAEqB,OAAQxB,EAAMC,cAAcC,S,EAG9C4B,kBAAoB,WAAO,IAAD,EACK,EAAKlC,MAA1BqB,EADgB,EAChBA,SAEFc,EAHkB,EACNP,OAEaQ,oBAE/B,OAAOf,EAASO,QAAO,SAAAE,GAAO,OAC5BA,EAAQ7B,KAAKmC,oBAAoBC,SAASF,O,4CAI9C,WAAU,IACAP,EAAWf,KAAKb,MAAhB4B,OAEFU,EAAmBzB,KAAKqB,oBAE9B,OACE,qCACE,cAAC,EAAD,CAAMvB,SAAUE,KAAKgB,aAErB,cAAC,EAAD,CAAQvB,MAAOsB,EAAQb,SAAUF,KAAKoB,eACtC,cAAC,EAAD,CACEZ,SAAUiB,EACVhB,gBAAiBT,KAAKkB,uB,GAvDdZ,cCFlBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.957f8598.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport shortid from 'shortid';\n\n\n\nclass Form extends Component{\n\n   nameInputId = shortid.generate();\n\n    state ={\n        name: '',\n        number: '',\n    }\n    handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({\n          [name]: value,\n        });\n      };\n\n      handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state );\n        this.reset();\n      };\n\n      reset = () => {\n          this.setState({'name' : '', 'number' : ''})\n      }\n\n    render(){\n        return(<>\n            <h1>Phone book</h1>\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Name\n                <input\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label>\n                Phone\n                <input\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  onChange={this.handleInputChange}\n                  pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button type='submit'> Add contact</button>\n            </form>\n          </>)\n    }\n}\n\n\nexport default Form;","import React from 'react';\n\n\nconst ContactList = ({contacts, onDeleteContact }) =>{return (<>\n    <ul>{contacts.map(({id, name, number}) => <li key={id}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul></>);\n    } \nexport default ContactList;\n","const Filter = ({value, onChange}) => {\n    return(<>\n    <h2>Contacts</h2>  \n     <label>\n        Find contacts by name\n        \n          <input type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\nexport default Filter;","import { Component } from 'react';\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport shortid from 'shortid';\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n\n    const normilizeFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normilizeFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getVisibleContact();\n\n    return (\n      <>\n        <Form onSubmit={this.addContact} />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}